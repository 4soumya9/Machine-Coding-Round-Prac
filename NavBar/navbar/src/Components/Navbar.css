/* navbar container  */
.navbar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  position: sticky;
  top: 0;
}

.logo {
  font-size: 22px;
}

/* Links Container  */
.nav-links {
  display: flex;
  gap: 20px;
}

.nav-links a {
  color: black;
  text-decoration: none;
  font-size: 18px;
}

.nav-links a:hover {
  color: #00bcd4;
}

.nav-links a.active {
  border-bottom: 2px solid black;
}

/* Dropdown  */

.dropdown {
  position: relative;
  /* üîπ 2. position: relative

Keeps the element in the normal flow (space is reserved for it).

BUT you can nudge/move it using top, left, right, bottom.

Important: The movement is relative to its normal position. */
}

.dropdown-content {
  display: none;
  position: absolute;
  top: 40px;
  flex-direction: column;
}

/* Mobile toggle */
.dropdown-content.show {
  display: flex;
  position: static;
  background: none;
  padding: 0;
}

/* Hamburger */

.hamburger {
  display: none;
  flex-direction: column;
  cursor: pointer;
  gap: 5px;
  /* margin-right: 20px; */
}

.hamburger span {
  width: 25px;
  height: 3px;
  background: white;
  transition: 0.3s;
}

@media (max-width: 760px) {
  .nav-links {
    position: relative;
    /* position: absolute; */
    /* right: -100%; */
    top: 60px;
    flex-direction: column;
  }
}

/* By default, a flex element aligns itself according to the parent container‚Äôs rules.
Your parent (.navbar) has:

display: flex;
justify-content: space-between;
align-items: center;


This makes first child (logo) go left, and last child (hamburger) go right. ‚úÖ

‚ùå Why it went to the middle */
