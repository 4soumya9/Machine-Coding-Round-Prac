.app {
  margin: 10px;
}

.header {
  text-align: center;
}

.input_box {
  display: block;
  margin: 0 auto 20px;
  padding: 10px;
  border: 1px solid black;
  /* cursor: pointer; */
  border-radius: 4px;
  width: 400px;
}
.movies_grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  gap: 15px;
  margin: 10px;
}

.pagination {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-top: 20px;
  gap: 8px;
}

.pagination button {
  padding: 8px 14px;
  border: none;
  background: #007bff;
  color: white;
  font-size: 14px;
  border-radius: 5px;
  cursor: pointer;
  transition: background 0.2s ease;
}

.pagination button:hover:not(:disabled) {
  background: #0056b3;
}

.pagination button:disabled {
  background: #ccc;
  cursor: not-allowed;
}

.pagination button.active {
  background: #28a745;
  font-weight: bold;
}

.pagination .dots {
  padding: 6px 10px;
  color: #555;
}

/*minmax(200px, 1fr)

200px (minimum) → Each grid cell (movie card) must be at least 200px wide. Even on small screens, the card won’t shrink smaller than 200px.

1fr (maximum) → "Fraction of available space".

fr is a special unit in CSS Grid → it divides leftover space proportionally.

1fr means: take one share of the remaining free space. */

/*Imagine you have a container 800px wide:

With grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));

The browser tries to fit as many 200px wide cells as possible.

 Then distributes the leftover space evenly using 1fr. 
 
 if 2fr, 2fr means: this column gets 2 shares of free space instead of 1*/
